# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.protobufs import common_pb2 as common__pb2
from api.protobufs import tg_pb2 as tg__pb2


class TgApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.auth = channel.unary_unary(
                '/TgApi/auth',
                request_serializer=tg__pb2.TgAuthRequest.SerializeToString,
                response_deserializer=common__pb2.AuthResponse.FromString,
                )
        self.get_dialogs = channel.unary_unary(
                '/TgApi/get_dialogs',
                request_serializer=common__pb2.User.SerializeToString,
                response_deserializer=common__pb2.Dialogs.FromString,
                )
        self.get_messages = channel.unary_unary(
                '/TgApi/get_messages',
                request_serializer=common__pb2.DialogRequest.SerializeToString,
                response_deserializer=common__pb2.Messages.FromString,
                )
        self.send_message = channel.unary_unary(
                '/TgApi/send_message',
                request_serializer=common__pb2.Send.SerializeToString,
                response_deserializer=common__pb2.StatusMessage.FromString,
                )
        self.mark_read = channel.unary_unary(
                '/TgApi/mark_read',
                request_serializer=common__pb2.DialogRequest.SerializeToString,
                response_deserializer=common__pb2.StatusMessage.FromString,
                )
        self.test_file = channel.unary_stream(
                '/TgApi/test_file',
                request_serializer=common__pb2.Text.SerializeToString,
                response_deserializer=common__pb2.Chunk.FromString,
                )
        self.get_id_by_username = channel.unary_unary(
                '/TgApi/get_id_by_username',
                request_serializer=common__pb2.UserName.SerializeToString,
                response_deserializer=common__pb2.UserId.FromString,
                )
        self.get_username_by_id = channel.unary_unary(
                '/TgApi/get_username_by_id',
                request_serializer=common__pb2.UserId.SerializeToString,
                response_deserializer=common__pb2.UserName.FromString,
                )


class TgApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_dialogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_messages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_message(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def mark_read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def test_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_id_by_username(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_username_by_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TgApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'auth': grpc.unary_unary_rpc_method_handler(
                    servicer.auth,
                    request_deserializer=tg__pb2.TgAuthRequest.FromString,
                    response_serializer=common__pb2.AuthResponse.SerializeToString,
            ),
            'get_dialogs': grpc.unary_unary_rpc_method_handler(
                    servicer.get_dialogs,
                    request_deserializer=common__pb2.User.FromString,
                    response_serializer=common__pb2.Dialogs.SerializeToString,
            ),
            'get_messages': grpc.unary_unary_rpc_method_handler(
                    servicer.get_messages,
                    request_deserializer=common__pb2.DialogRequest.FromString,
                    response_serializer=common__pb2.Messages.SerializeToString,
            ),
            'send_message': grpc.unary_unary_rpc_method_handler(
                    servicer.send_message,
                    request_deserializer=common__pb2.Send.FromString,
                    response_serializer=common__pb2.StatusMessage.SerializeToString,
            ),
            'mark_read': grpc.unary_unary_rpc_method_handler(
                    servicer.mark_read,
                    request_deserializer=common__pb2.DialogRequest.FromString,
                    response_serializer=common__pb2.StatusMessage.SerializeToString,
            ),
            'test_file': grpc.unary_stream_rpc_method_handler(
                    servicer.test_file,
                    request_deserializer=common__pb2.Text.FromString,
                    response_serializer=common__pb2.Chunk.SerializeToString,
            ),
            'get_id_by_username': grpc.unary_unary_rpc_method_handler(
                    servicer.get_id_by_username,
                    request_deserializer=common__pb2.UserName.FromString,
                    response_serializer=common__pb2.UserId.SerializeToString,
            ),
            'get_username_by_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_username_by_id,
                    request_deserializer=common__pb2.UserId.FromString,
                    response_serializer=common__pb2.UserName.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TgApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TgApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/auth',
            tg__pb2.TgAuthRequest.SerializeToString,
            common__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_dialogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/get_dialogs',
            common__pb2.User.SerializeToString,
            common__pb2.Dialogs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_messages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/get_messages',
            common__pb2.DialogRequest.SerializeToString,
            common__pb2.Messages.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/send_message',
            common__pb2.Send.SerializeToString,
            common__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def mark_read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/mark_read',
            common__pb2.DialogRequest.SerializeToString,
            common__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def test_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TgApi/test_file',
            common__pb2.Text.SerializeToString,
            common__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_id_by_username(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/get_id_by_username',
            common__pb2.UserName.SerializeToString,
            common__pb2.UserId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_username_by_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TgApi/get_username_by_id',
            common__pb2.UserId.SerializeToString,
            common__pb2.UserName.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
